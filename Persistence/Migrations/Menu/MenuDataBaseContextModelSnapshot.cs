// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Contexts;

namespace Persistence.Migrations.Menu
{
    [DbContext(typeof(MenuDataBaseContext))]
    partial class MenuDataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.MenuComposite.MenuComponent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRoot")
                        .HasColumnType("bit");

                    b.Property<int?>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuComponent");

                    b.HasDiscriminator<string>("Discriminator").HasValue("MenuComponent");
                });

            modelBuilder.Entity("Domain.Entities.MenuComposite.Menu", b =>
                {
                    b.HasBaseType("Domain.Entities.MenuComposite.MenuComponent");

                    b.HasDiscriminator().HasValue("Menu");
                });

            modelBuilder.Entity("Domain.Entities.MenuComposite.MenuItem", b =>
                {
                    b.HasBaseType("Domain.Entities.MenuComposite.MenuComponent");

                    b.Property<string>("CKEditorText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModularPage")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("MenuItem");
                });

            modelBuilder.Entity("Domain.Entities.MenuComposite.MenuComponent", b =>
                {
                    b.HasOne("Domain.Entities.MenuComposite.Menu", null)
                        .WithMany("MenuItem")
                        .HasForeignKey("MenuId");
                });

            modelBuilder.Entity("Domain.Entities.MenuComposite.Menu", b =>
                {
                    b.Navigation("MenuItem");
                });
#pragma warning restore 612, 618
        }
    }
}
